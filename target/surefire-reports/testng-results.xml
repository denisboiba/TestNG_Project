<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-26T23:00:16 CET" name="Default Suite" finished-at="2023-02-26T23:00:23 CET" duration-ms="6675">
    <groups>
    </groups>
    <test started-at="2023-02-26T23:00:16 CET" name="Regression" finished-at="2023-02-26T23:00:23 CET" duration-ms="6675">
      <class name="tests.api.NegativeAPITests">
        <test-method signature="UpdatePlayerNegativeTest()[pri:0, instance:tests.api.NegativeAPITests@5626d18c]" started-at="2023-02-26T23:00:16 CET" name="UpdatePlayerNegativeTest" description="Обновить игрока" finished-at="2023-02-26T23:00:21 CET" duration-ms="4404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdatePlayerNegativeTest -->
        <test-method signature="createPlayerNegativeTest()[pri:0, instance:tests.api.NegativeAPITests@5626d18c]" started-at="2023-02-26T23:00:21 CET" name="createPlayerNegativeTest" description="Создать игрока" finished-at="2023-02-26T23:00:21 CET" duration-ms="430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPlayerNegativeTest -->
        <test-method signature="deletePlayerNegativeTest()[pri:0, instance:tests.api.NegativeAPITests@5626d18c]" started-at="2023-02-26T23:00:21 CET" name="deletePlayerNegativeTest" description="Удалить игрока" finished-at="2023-02-26T23:00:22 CET" duration-ms="890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePlayerNegativeTest -->
        <test-method signature="getAllPlayersNegativeTest()[pri:0, instance:tests.api.NegativeAPITests@5626d18c]" started-at="2023-02-26T23:00:22 CET" name="getAllPlayersNegativeTest" description="Получить всех игроков" finished-at="2023-02-26T23:00:22 CET" duration-ms="321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllPlayersNegativeTest -->
        <test-method signature="getPlayerByIdNegativeTest()[pri:0, instance:tests.api.NegativeAPITests@5626d18c]" started-at="2023-02-26T23:00:22 CET" name="getPlayerByIdNegativeTest" description="Получить игрока по ИД" finished-at="2023-02-26T23:00:23 CET" duration-ms="288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPlayerByIdNegativeTest -->
      </class> <!-- tests.api.NegativeAPITests -->
      <class name="tests.api.PositiveAPITests">
        <test-method signature="UpdatePlayerTest()[pri:0, instance:tests.api.PositiveAPITests@3119cf6f]" started-at="2023-02-26T23:00:16 CET" name="UpdatePlayerTest" description="Обновить игрока" finished-at="2023-02-26T23:00:21 CET" duration-ms="4406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdatePlayerTest -->
        <test-method signature="createPlayerTest()[pri:0, instance:tests.api.PositiveAPITests@3119cf6f]" started-at="2023-02-26T23:00:21 CET" name="createPlayerTest" description="Create player" finished-at="2023-02-26T23:00:21 CET" duration-ms="518" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <403>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <403>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$3.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:92)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)
at io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)
at tests.api.PositiveAPITests.createPlayerTest(PositiveAPITests.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPlayerTest -->
        <test-method signature="deletePlayerTest()[pri:0, instance:tests.api.PositiveAPITests@3119cf6f]" started-at="2023-02-26T23:00:21 CET" name="deletePlayerTest" description="Удалить игрока" finished-at="2023-02-26T23:00:22 CET" duration-ms="791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePlayerTest -->
        <test-method signature="getAllPlayersTest()[pri:0, instance:tests.api.PositiveAPITests@3119cf6f]" started-at="2023-02-26T23:00:22 CET" name="getAllPlayersTest" description="Получить всех игроков" finished-at="2023-02-26T23:00:22 CET" duration-ms="316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllPlayersTest -->
        <test-method signature="getPlayerByIdTest()[pri:0, instance:tests.api.PositiveAPITests@3119cf6f]" started-at="2023-02-26T23:00:22 CET" name="getPlayerByIdTest" description="Получить игрока по ИД" finished-at="2023-02-26T23:00:23 CET" duration-ms="486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPlayerByIdTest -->
      </class> <!-- tests.api.PositiveAPITests -->
    </test> <!-- Regression -->
  </suite> <!-- Default Suite -->
</testng-results>
